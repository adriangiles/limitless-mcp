openapi: 3.0.3
info:
  title: Limitless MCP Memory API
  description: |
    Natural language memory search and summarization for your Limitless lifelogs. Use this API to ask questions like "What did I say about Mimi last week?" and get a GPT-generated summary from your lifelog data.
    
    **Supported prompt patterns:**
      - "What did I say about [topic] last week?"
      - "Show me all meetings from yesterday."
      - "Summarize all starred lifelogs from March 2025."
      - "What did I mention about [person] between June 1 and June 10?"
    
    **Query options:**
      - `date`: Accepts natural language ("yesterday", "last week", "March 2025") or ISO date (YYYY-MM-DD)
      - `timezone`: IANA timezone (e.g., "Australia/Melbourne")
      - `isStarred`: Filter for starred lifelogs (true/false)
      - `limit`: Max number of lifelogs to fetch (default: 20)
      - `start`, `end`: For date ranges (YYYY-MM-DD)
  version: 1.0.0
servers:
  - url: https://limitless-mcp.onrender.com
paths:
  /memory:
    post:
      summary: Conversational memory query
      description: |
        Query your lifelog memory using natural language. Returns a GPT-generated summary of relevant events.
      operationId: memoryQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The user's natural language memory question (e.g. "What did I say about Mimi last week?")
                  example: What did I say about Mimi last week?
                date:
                  type: string
                  description: Optional date or time range (e.g. "yesterday", "last week", or ISO date)
                  example: last week
                timezone:
                  type: string
                  description: Optional timezone (e.g. "Australia/Melbourne")
                  example: Australia/Melbourne
                isStarred:
                  type: boolean
                  description: Filter for starred lifelogs
                  example: false
                limit:
                  type: integer
                  description: Max number of lifelogs to fetch
                  example: 10
              required:
                - prompt
      responses:
        '200':
          description: GPT-generated memory summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The GPT-generated summary of relevant lifelogs
              examples:
                summary:
                  value:
                    result: |
                      Mimi was mentioned in two meetings last week. In the Monday meeting, you discussed project updates with Mimi. In the Thursday meeting, you referenced Mimi's feedback on the new design.
  /search:
    post:
      summary: Search lifelogs
      description: Search lifelogs using a query string. Returns a list of relevant lifelogs.
      operationId: searchLifelogs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: Search query string
                  example: meeting
              required:
                - query
      responses:
        '200':
          description: List of lifelogs
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LifelogSummary'
              examples:
                search:
                  value:
                    results:
                      - id: "abc123"
                        title: "Monday Meeting"
                        text: "Discussed project updates with Mimi."
                        url: "https://app.limitless.ai/lifelogs/abc123"
                      - id: "def456"
                        title: "Thursday Review"
                        text: "Reviewed feedback from Mimi."
                        url: "https://app.limitless.ai/lifelogs/def456"
  /fetch:
    post:
      summary: Fetch lifelog by ID
      description: Fetch a single lifelog by its ID.
      operationId: fetchLifelog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Lifelog ID
                  example: abc123
              required:
                - id
      responses:
        '200':
          description: Lifelog object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lifelog'
              examples:
                lifelog:
                  value:
                    id: "abc123"
                    title: "Monday Meeting"
                    markdown: "# Monday Meeting\nDiscussed project updates with Mimi."
                    startTime: "2025-06-23T09:00:00+10:00"
                    endTime: "2025-06-23T10:00:00+10:00"
                    updatedAt: "2025-06-23T10:05:00+10:00"
components:
  schemas:
    LifelogSummary:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        text:
          type: string
        url:
          type: string
    Lifelog:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        markdown:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
